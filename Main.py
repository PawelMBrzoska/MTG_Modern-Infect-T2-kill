# Main of MTG Modern Infect T2 kill chance calculator
import pandas as pd
import matplotlib.pyplot as plt
from tkinter import *
from tkinter import ttk
import os
import sys
import converter
import classes

#Setting directory

os.chdir(os.path.dirname(sys.argv[0]))


def Start(Test):
    #while wait == True:
    #    try:
    #        i = int(input("How many itterations you want to make during the test? (Suggesting: 10.000)"))
    #    except ValueError:
    #        print("Itteration number have to be a positive whole number.")
    #        continue
    #    
    #    try:
    #        handsize = int(input("How many cards in hand? (Suggesting: 7)"))
    #    except ValueError:
    #        print("Card number in hand have to be a positive whole number.")
    #        continue

    def Normal():
        Deck = Get_Deck()
        i = 10000 # number of itterations -> make it setable in next version
        handsize = 7 
        Test.Test_go(Deck, i, handsize) 
        print(Test)
        pd.Series(Test.poison).value_counts().sort_index().plot(kind='bar')
        plt.show()  

    def Save_deck():
        text = Deck_textbox.get("1.0", "end-1c")
        with open("Deck.txt", "w") as file:
            file.write(text)
        print("Deck saved")

    def Get_Deck():
        #Getting the list from the txt file generated by goldfish.
        text = Deck_textbox.get("1.0", "end-1c") # Get the whole textbox as text
        df = text.splitlines()
        deck = []
        for line in df:
            # Goldfish add sidebord after an empty line. As we do not want sideboard the for loop breaks after empty line.
            if line != "":
                for i in range(0,int(line[0])):
                    deck.append(line[2:])
            else:
                break
        #Saving is as a list to pass it to convertet
        return(deck)

    frm = ttk.Frame(Test.window, padding=10)
    frm.grid()

    Label(frm, text="The Deck").grid(column=1, row=1)

    Button(frm, text="RUN 10k with 7 cards in hand", command=Normal).grid(column=2, row=2)
    Button(frm, text="Quit", command=Test.window.destroy).grid(column=2, row=12)
    Button(frm, text="Save the deck", command=Save_deck).grid(column=2, row=3)

    Deck_textbox = Text(frm, height=18, width=28)
    Deck_textbox.grid(column=1, row=2, rowspan=11) # Eddit the rowspan to line up with buttons
    Deck_textbox.insert(END, open("Deck.txt").read())

    Test.window.mainloop()

if __name__ == "__main__":

    Test = classes.Test()
    Test.window = Tk()
    Start(Test)


